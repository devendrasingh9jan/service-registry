services:
  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - bootnetwork

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPIC: "AUTH_TOPIC:1:1"
      KAFKA_CREATE_GROUP: "AUTH_GROUP"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    links:
      - zookeeper
    networks:
      - bootnetwork
      

  database:
    image: mysql:8.3
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root --password=root"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      DATABASE_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - database:/var/lib/mysql
    ports:
      - 3306:3306 
    networks:
      - bootnetwork

  service-registry-service:
    build:
      context: ./service-registry
    ports:
      - "8761:8761"
    networks:
      - bootnetwork

  api-gateway-service:
    build:
      context: ./gateway      
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-registry-service:8761/eureka/
    networks:
      - bootnetwork
    ports:
      - "8000:8000"
    depends_on:
      - service-registry-service
    links:
      - service-registry-service

  user-authentication-service:
    build:
      context: ./authentication  # Path to directory containing Dockerfile for api-gateway-service
    environment:
      - spring.datasource.url=jdbc:mysql://database:3306/user_auth?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - eureka.client.serviceUrl.defaultZone=http://service-registry-service:8761/eureka/
      - spring.kafka.producer.bootstrap-servers=kafka:9092
      # - spring.kafka.producer.bootstrap-clients=kafka:9092
    restart: on-failure
    networks:
      - bootnetwork
    ports:
    - "8086:8086" 
    depends_on:
      - database
      - service-registry-service
    links:
      - zookeeper
      - kafka
      - service-registry-service
  
  wishlist-service:
    build:
      context: ./wishlist  # Path to directory containing Dockerfile for wishlist
    environment:
      - spring.datasource.url=jdbc:mysql://database:3306/wishlist?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - eureka.client.serviceUrl.defaultZone=http://service-registry-service:8761/eureka/
    restart: on-failure
    networks:
      - bootnetwork
    ports:
    - "8082:8082"  
    depends_on:
      - database
      - service-registry-service
    links:
      - service-registry-service

  
  user-profile-service:
    build:
      context: ./user-profile
    environment:
      - spring.datasource.url=jdbc:mysql://database:3306/user_profile?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - eureka.client.serviceUrl.defaultZone=http://service-registry-service:8761/eureka/
      - spring.kafka.producer.bootstrap-servers=kafka:9092
    networks:
      - bootnetwork
    ports:
    - "8005:8005"  
    restart: on-failure
    depends_on:
      - database
      - service-registry-service
    links:
      - zookeeper
      - kafka
      - service-registry-service

  sports-service:
    build:
      context: ./sports
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-registry-service:8761/eureka/
    networks:
      - bootnetwork
    ports:
    - "8081:8081"  
    depends_on:
      - service-registry-service
    links:
      - service-registry-service

volumes:
  database:
  
networks:
  bootnetwork:
    driver: bridge